{"version":3,"sources":["utils/Employee.js","components/SearchBox.js","components/Nav.js","components/Header.js","components/DataBody.js","utils/API.js","App.js","index.js"],"names":["EmployeeContext","React","createContext","employees","search","handleInputChange","SearchBox","useContext","className","name","type","placeholder","aria-label","value","id","onChange","Nav","Header","props","DataBody","key","pic","email","phone","dob","src","axios","get","mainList","App","useState","employeesState","setEmployeesState","useEffect","initEmployees","a","API","res","data","results","console","log","sortNames","b","first","sortPhones","sortEmails","sortDOBs","date","handleClickSort","event","sorted","target","innerText","sort","Employee","Provider","filtered","filter","emp","last","moment","format","toLowerCase","indexOf","searchEmployees","Table","onClick","map","picture","thumbnail","cell","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.321cf7b5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EmployeeContext = React.createContext({\n  employees: [],\n  search: \"\",\n  handleInputChange: () => {},\n});\n\nexport default EmployeeContext;","import React, {useContext} from \"react\";\nimport \"../styles/SearchBox.css\";\nimport EmployeeContext from \"../utils/Employee\";\n\nfunction SearchBox() {\n  const {search, handleInputChange} = useContext(EmployeeContext);\n\n  return (\n    <form className=\"form-inline\">\n      <input \n        className=\"form-control mr-sm-2\" \n        name=\"search\"\n        type=\"search\" \n        placeholder=\"Find Employee\"\n        aria-label=\"Search\" \n        value={search}\n        id=\"search\"\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n}\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"../styles/Nav.css\";\nimport SearchBox from \"./SearchBox\"\n\nfunction Nav() {\n  return (\n    <nav >\n      <SearchBox />\n\n    </nav>\n  );\n}\n\nexport default Nav;","import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <h1>Employee Directory</h1>\n      <p>Click on a column headers to sort or use the search to narrow your results.</p>\n    </div>\n  )\n}\n\nexport default Header;","import React from \"react\";\nimport \"../styles/DataBody.css\";\n\nfunction DataBody({key, pic, name, email, phone, dob}) {\n   return (\n    <tr id={key}>\n      <td><img src={pic} /></td>\n      <td>{name}</td>\n      <td>{phone}</td>\n      <td>{email}</td>\n      <td>{dob}</td>\n    </tr>\n  );\n}\n\nexport default DataBody;","import axios from \"axios\";\n// import React from \"react\";\n\nexport default {\n  getEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\n  }\n}\n","import React, {useState, useEffect} from \"react\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport DataBody from \"./components/DataBody\";\nimport API from \"./utils/API\";\nimport { Table } from \"reactstrap\";\nimport moment from \"moment\";\nimport EmployeeContext from \"./utils/Employee\";\n\nlet mainList = []; //global var for mainList list \n\nfunction App() {\n  const [employeesState, setEmployeesState] = useState({\n    employees: [],\n    search: \"\"\n  })\n\n  const { employees, search } = employeesState;\n  \n  useEffect(() => {\n    initEmployees();\n  },[]);\n\n  //initialize the main List of employees\n  const initEmployees = async () => {\n    try {\n      const res = await API.getEmployees();\n      // console.log(\"getEmployees -> res.data.results\", res.data.results);\n      mainList = res.data.results;\n      console.log('mainList: ', mainList);\n      setEmployeesState({...employeesState, employees: mainList});  \n    } catch (error) {\n      console.log(\"There was an error processing your results.\");\n    }\n  };\n\n  // filter list by search\n  const searchEmployees = (value) => {\n    const filtered = mainList.filter(emp => {\n      const str = `${emp.name.first} ${emp.name.last}\n      ${emp.phone}\n      ${emp.email}\n      ${moment(emp.dob.date).format('MM/DD/YYYY')}`\n      return str.toLowerCase().indexOf(value.toLowerCase()) > -1;\n    });\n    setEmployeesState({...employeesState, search: value, employees: filtered});\n  }\n\n  // search while typing\n  const handleInputChange = (event) => {\n    const {value} = event.target\n    searchEmployees(value);\n  };\n\n  //sort by names\n  function sortNames( a, b ) {\n    if ( a.name.first < b.name.first ){\n      return -1;\n    }\n    if ( a.name.first > b.name.first ){\n      return 1;\n    }\n    return 0;\n  }\n  \n  //sort by phone numbers\n  function sortPhones( a, b ) {\n    if ( a.phone < b.phone ){\n      return -1;\n    }\n    if ( a.phone > b.phone ){\n      return 1;\n    }\n    return 0;\n  }\n  \n  // sort by emails\n  function sortEmails( a, b ) {\n    if ( a.email < b.email ){\n      return -1;\n    }\n    if ( a.email > b.email ){\n      return 1;\n    }\n    return 0;\n  }\n\n  // sort by birthdays\n  function sortDOBs( a, b ) {\n    if ( a.dob.date < b.dob.date ){\n      return -1;\n    }\n    if ( a.dob.date > b.dob.date ){\n      return 1;\n    }\n    return 0;\n  }\n\n  const handleClickSort = (event) => {\n    // console.log('handleClickSort event: ', event);\n    let sorted = []\n\n    //choose sorting function based on what was clicked\n    switch(event.target.innerText) {\n      case \"Name\":\n        sorted = employees.sort(sortNames);\n        break;\n      case \"Phone\":\n        sorted = employees.sort(sortPhones);\n        break;\n      case \"Email\":\n        sorted = employees.sort(sortEmails);\n        break;\n      case \"Date of Birth\":\n        sorted = employees.sort(sortDOBs);\n        break;\n    }\n\n    // console.log('sorted: ', sorted);\n    setEmployeesState({...employeesState, employees: sorted});\n  }\n\n  return (\n    <EmployeeContext.Provider\n      value={{\n        search,\n        employees,\n        handleInputChange,\n      }}\n    >\n      <div>\n        <Header />\n        <Nav />\n        <Table>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th onClick={handleClickSort}>Name</th>\n              <th onClick={handleClickSort}>Phone</th>\n              <th onClick={handleClickSort}>Email</th>\n              <th onClick={handleClickSort}>Date of Birth</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employees.map(emp => (\n              <DataBody \n                key={emp.cell}\n                pic={emp.picture.thumbnail}\n                name={`${emp.name.first} ${emp.name.last}`}\n                phone={emp.phone}\n                email={emp.email}\n                dob={moment(emp.dob.date).format('MM/DD/YYYY')}\n              />\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </EmployeeContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}